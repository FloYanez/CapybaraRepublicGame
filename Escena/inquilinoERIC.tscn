[gd_scene load_steps=14 format=2]

[ext_resource path="res://Personajes/eric_front.png" type="Texture" id=1]
[ext_resource path="res://Personajes/eric_side.png" type="Texture" id=2]

[sub_resource type="GDScript" id=14]
script/source = "extends KinematicBody2D

var horizontal_speed = 100
var velocity = Vector2.ZERO
var gravity = 300
var direction = 0 #Mult de velocidad -1 izquierda, 0 nada, 1 derecha


onready var sprite = $Sprite
onready var anim_player = $AnimationPlayer
onready var anim_tree = $AnimationTree
onready var playback = anim_tree.get(\"parameters/playback\")
func _ready():
	anim_tree.active = true


func _physics_process(delta): #gravedad
	velocity = move_and_slide(velocity, Vector2.UP)
	velocity.y += gravity*delta
	if is_on_floor() and velocity.y > 0: #si va cayendo con velocidad y choca de una
		velocity.y = 0
		
	if is_on_floor():
		if abs(velocity.x)>10:
			playback.travel(\"walk\")#travel da el mejor esfuerzo para llegar a una animación, pasando por todas
		else:
			playback.travel(\"Idle\")
	
	#direction = floor(rand_range(-1, 2)) #saca un entero aleatorio, el floor le saca los decimales
	if direction == 0:# or is_on_wall #si no hay dirección la velocidad en x es 0
		velocity.x = 0
	elif direction == -1: #si mira hacia la izquierda la velocidad se hace negativa
		velocity.x = direction*horizontal_speed
		sprite.flip_h = false
	elif direction == 1: #si mira a la derecha
		velocity.x= direction*horizontal_speed
		sprite.flip_h = true
		
#	if velocity.x > 0:
#		sprite.flip_h = false
#	elif velocity.x < 0:
#		sprite.flip_h = true
		
func _on_Timer_timeout():
	direction = floor(rand_range(-1, 2)) #saca un entero aleatorio, el floor le saca los decimales
	print (direction)
	pass # Replace with function body.	
"

[sub_resource type="CapsuleShape2D" id=1]
radius = 17.0
height = 28.0

[sub_resource type="Animation" id=2]
resource_name = "Idle"
length = 0.6
loop = true
step = 0.15
tracks/0/type = "value"
tracks/0/path = NodePath(".:texture")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ ExtResource( 1 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:hframes")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 4 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath(".:frame")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.15, 0.3, 0.45 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3 ]
}

[sub_resource type="Animation" id=3]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath(".:vframes")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 1 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:frame")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0 ]
}

[sub_resource type="Animation" id=4]
resource_name = "walk"
length = 0.8
loop = true
step = 0.2
tracks/0/type = "value"
tracks/0/path = NodePath(".:texture")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ ExtResource( 2 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:hframes")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 4 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath(".:frame")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.2, 0.4, 0.6 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3 ]
}

[sub_resource type="AnimationNodeAnimation" id=5]
animation = "Idle"

[sub_resource type="AnimationNodeAnimation" id=11]
animation = "walk"

[sub_resource type="AnimationNodeStateMachineTransition" id=12]

[sub_resource type="AnimationNodeStateMachineTransition" id=13]

[sub_resource type="AnimationNodeStateMachine" id=9]
states/Idle/node = SubResource( 5 )
states/Idle/position = Vector2( 142, 66 )
states/walk/node = SubResource( 11 )
states/walk/position = Vector2( 345, 66 )
transitions = [ "walk", "Idle", SubResource( 12 ), "Idle", "walk", SubResource( 13 ) ]
start_node = "Idle"

[sub_resource type="AnimationNodeStateMachinePlayback" id=10]

[node name="FLO" type="KinematicBody2D"]
position = Vector2( 467, 437 )
script = SubResource( 14 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2( -8, 0 )
shape = SubResource( 1 )

[node name="Sprite" type="Sprite" parent="."]
position = Vector2( -8, -3 )
scale = Vector2( 1.5, 1.5 )
texture = ExtResource( 1 )
hframes = 4

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
root_node = NodePath("../Sprite")
anims/Idle = SubResource( 2 )
anims/RESET = SubResource( 3 )
anims/walk = SubResource( 4 )

[node name="AnimationTree" type="AnimationTree" parent="."]
tree_root = SubResource( 9 )
anim_player = NodePath("../AnimationPlayer")
active = true
parameters/playback = SubResource( 10 )
